'use strict';

var _seamlessImmutable = require('seamless-immutable');

var _seamlessImmutable2 = _interopRequireDefault(_seamlessImmutable);

var _createReducer = require('../../creators/createReducer');

var _createReducer2 = _interopRequireDefault(_createReducer);

var _ = require('.');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialState = {
  target: null,
  targetLoading: false,
  count: 0
};

var setUp = {
  state: null
};

beforeEach(function () {
  setUp.state = (0, _seamlessImmutable2.default)(initialState);
});

describe('onLoading', function () {
  it('Sets correctly loading target', function () {
    var reducer = (0, _createReducer2.default)(setUp.state, {
      '@@ACTION/TYPE': (0, _2.default)()
    });
    var newState = reducer(setUp.state, { type: '@@ACTION/TYPE', target: 'target' });
    expect(newState.targetLoading).toBe(true);
  });
  it('Does not modify other targets', function () {
    var reducer = (0, _createReducer2.default)(setUp.state, {
      '@@ACTION/TYPE': (0, _2.default)()
    });
    var newState = reducer(setUp.state, { type: '@@ACTION/TYPE', target: 'target' });
    expect(newState.target).toBeNull();
  });
  it('Sets loading conditionally', function () {
    var reducer = (0, _createReducer2.default)(setUp.state, {
      '@@ACTION/TYPE': (0, _2.default)(function (action, state) {
        return !!action.payload || state.count > 0;
      })
    });
    var newState = reducer(setUp.state, { type: '@@ACTION/TYPE', target: 'target' });
    expect(newState.targetLoading).toBe(false);
    newState = reducer(setUp.state, { type: '@@ACTION/TYPE', target: 'target', payload: 'payload' });
    expect(newState.targetLoading).toBe(true);
  });
});