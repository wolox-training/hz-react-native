'use strict';

var _seamlessImmutable = require('seamless-immutable');

var _seamlessImmutable2 = _interopRequireDefault(_seamlessImmutable);

var _createReducer = require('../../creators/createReducer');

var _createReducer2 = _interopRequireDefault(_createReducer);

var _ = require('.');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialState = {
  aTarget: null,
  count: 1
};

var setUp = {
  state: null
};

beforeEach(function () {
  setUp.state = (0, _seamlessImmutable2.default)(initialState);
});

describe('onReadValue', function () {
  it('Reads a value from a payload', function () {
    var reducer = (0, _createReducer2.default)(setUp.state, {
      '@@ACTION/TYPE': (0, _2.default)()
    });
    var newState = reducer(setUp.state, { type: '@@ACTION/TYPE', payload: 'An elephant', target: 'aTarget' });
    expect(newState.aTarget).toBe('An elephant');
  });

  it('Reads a custom value from the payload or the state', function () {
    var reducer = (0, _createReducer2.default)(setUp.state, {
      '@@ACTION/ELEPHUN': (0, _2.default)(function (action) {
        return action.payload.elephantCount;
      }),
      '@@ACTION/ELECOUNT': (0, _2.default)(function (action, state) {
        return action.payload.elephantCount + state.count;
      })
    });
    var newState = reducer(setUp.state, { type: '@@ACTION/ELEPHUN', payload: { elephantCount: 3 }, target: 'aTarget' });
    expect(newState.aTarget).toBe(3);
    newState = reducer(newState, { type: '@@ACTION/ELECOUNT', payload: { elephantCount: 5 }, target: 'count' });
    expect(newState.count).toBe(6);
    expect(newState.aTarget).toBe(3);
  });
});