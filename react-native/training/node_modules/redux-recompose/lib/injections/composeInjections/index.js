'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _mergeInjections = require('../mergeInjections');

var _mergeInjections2 = _interopRequireDefault(_mergeInjections);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function composeInjections() {
  var _this = this;

  for (var _len = arguments.length, injections = Array(_len), _key = 0; _key < _len; _key++) {
    injections[_key] = arguments[_key];
  }

  var injectionsDescription = (0, _mergeInjections2.default)(injections);

  var _injectionsDescriptio = injectionsDescription.prebehavior,
      prebehavior = _injectionsDescriptio === undefined ? function () {} : _injectionsDescriptio,
      _injectionsDescriptio2 = injectionsDescription.apiCall,
      apiCall = _injectionsDescriptio2 === undefined ? function () {} : _injectionsDescriptio2,
      _injectionsDescriptio3 = injectionsDescription.determination,
      determination = _injectionsDescriptio3 === undefined ? function () {
    return true;
  } : _injectionsDescriptio3,
      _injectionsDescriptio4 = injectionsDescription.success,
      success = _injectionsDescriptio4 === undefined ? function () {
    return true;
  } : _injectionsDescriptio4,
      _injectionsDescriptio5 = injectionsDescription.postSuccess,
      postSuccess = _injectionsDescriptio5 === undefined ? function () {} : _injectionsDescriptio5,
      _injectionsDescriptio6 = injectionsDescription.postBehavior,
      postBehavior = _injectionsDescriptio6 === undefined ? function () {} : _injectionsDescriptio6,
      _injectionsDescriptio7 = injectionsDescription.postFailure,
      postFailure = _injectionsDescriptio7 === undefined ? function () {} : _injectionsDescriptio7,
      _injectionsDescriptio8 = injectionsDescription.failure,
      failure = _injectionsDescriptio8 === undefined ? function () {} : _injectionsDescriptio8,
      _injectionsDescriptio9 = injectionsDescription.statusHandler,
      statusHandler = _injectionsDescriptio9 === undefined ? function () {
    return true;
  } : _injectionsDescriptio9;


  return function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(dispatch, getState) {
      var response, shouldContinue, _shouldContinue;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              prebehavior(dispatch);
              _context.next = 3;
              return apiCall(getState);

            case 3:
              response = _context.sent;

              postBehavior(dispatch, response);
              if (determination(response)) {
                shouldContinue = success(dispatch, response, getState());

                if (shouldContinue) postSuccess(dispatch, response, getState());
              } else {
                _shouldContinue = statusHandler(dispatch, response, getState());

                if (_shouldContinue) {
                  failure(dispatch, response, getState());
                  postFailure(dispatch, response, getState());
                }
              }

            case 6:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, _this);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
}

exports.default = composeInjections;