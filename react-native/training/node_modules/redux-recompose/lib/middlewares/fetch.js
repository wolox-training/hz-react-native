'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _baseThunkAction = require('../injections/baseThunkAction');

var _baseThunkAction2 = _interopRequireDefault(_baseThunkAction);

var _emptyThunkAction = require('../injections/emptyThunkAction');

var _emptyThunkAction2 = _interopRequireDefault(_emptyThunkAction);

var _singleCallThunkAction = require('../injections/singleCallThunkAction');

var _singleCallThunkAction2 = _interopRequireDefault(_singleCallThunkAction);

var _composeInjections = require('../injections/composeInjections');

var _composeInjections2 = _interopRequireDefault(_composeInjections);

var _mergeInjections = require('../injections/mergeInjections');

var _mergeInjections2 = _interopRequireDefault(_mergeInjections);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ensembleInjections = function ensembleInjections(action) {
  var base = void 0;
  if (!action.type) {
    base = (0, _singleCallThunkAction2.default)(action);
  } else {
    base = action.target ? (0, _baseThunkAction2.default)(action) : (0, _emptyThunkAction2.default)(action);
  }
  if (!action.injections) return base;

  var injections = action.injections.constructor === Array ? (0, _mergeInjections2.default)(action.injections) : action.injections;

  return (0, _extends3.default)({}, base, injections);
};

var fetchMiddleware = function fetchMiddleware(_ref) {
  var dispatch = _ref.dispatch;
  return function (next) {
    return function (action) {
      return action.service ? dispatch((0, _composeInjections2.default)(ensembleInjections(action))) : next(action);
    };
  };
};

exports.default = fetchMiddleware;