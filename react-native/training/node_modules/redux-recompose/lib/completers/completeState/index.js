'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _typeUtils = require('../../utils/typeUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Given a defaultState, it populates that state with ${key}Loading and ${key}Error
function completeState(defaultState) {
  var ignoredTargets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  if (!(0, _typeUtils.isValidObject)(defaultState)) {
    throw new Error('Expected an object as a state to complete.');
  }
  if (!(0, _typeUtils.isStringArray)(ignoredTargets)) {
    throw new Error('Expected an array of strings as ignored targets');
  }

  var completedState = (0, _extends3.default)({}, defaultState);
  (0, _keys2.default)(defaultState).filter(function (key) {
    return ignoredTargets.indexOf(key) === -1;
  }).forEach(function (key) {
    completedState[key + 'Loading'] = false;
    completedState[key + 'Error'] = null;
  });
  return completedState;
}

exports.default = completeState;